buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/libs-milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//		classpath "com.devsoap.plugin:gradle-vaadin-plugin:1.2.3"
//		classpath ("org.springframework:springloaded:${springBootVersion}")
	}
}

plugins {
//	id 'io.franzbecker.gradle-lombok' version '1.8'
	id 'java'
//	id 'com.devsoap.plugin.vaadin' version '1.2.1'
//	id 'org.springframework.boot' version '1.5.2.RELEASE'
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
//apply plugin: "com.devsoap.plugin.vaadin"

version = '1.0.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "http://maven.vaadin.com/vaadin-addons" }
	maven { url "https://mvnrepository.com/"}
}
def libs = [
		login: fileTree(dir: 'lib', include: '*.jar'),
		json: fileTree(dir: 'lib/json', include: '*.jar'),
		gwt:fileTree(dir: 'lib/gwt', include: '*.jar'),
		payment:fileTree(dir: 'lib/payment', include: '*.jar')
]

dependencies {
	compile('org.projectlombok:lombok:1.16.10')
	compile('ma.glasnost.orika:orika-core:1.4.3')
	compile('com.google.guava:guava:18.0')
	compile ('org.apache.commons:commons-lang3:3.5')
	compile group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'

	compile group: 'joda-time', name: 'joda-time', version: '2.9.9'

	compile ('javax.servlet:javax.servlet-api:3.1.0')

	compile('com.vaadin:vaadin-compatibility-server:8.0.0')
	compile ('com.vaadin:vaadin-compatibility-client-compiled:8.0.0')
	compile ('com.vaadin:vaadin-client-compiler:8.0.0')

	compile ('com.vaadin:vaadin-compatibility-shared:8.0.0')
	compile ('com.vaadin:vaadin-compatibility-themes:8.0.0')
	compile ('com.vaadin:vaadin-themes:8.0.0')

	compile libs.login
	compile libs.json

//	compile group: 'com.paypal.sdk', name: 'paypal-core', version: '1.7.2'
	compile 'com.paypal.sdk:rest-api-sdk:1.13.1'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
	compile libs.payment
//	compile group: 'com.paypal.sdk', name: 'adaptivepaymentssdk', version: '2.9.117'


	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
//	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('com.vaadin:vaadin-spring-boot-starter:2.0.1')

	compile('com.maxmind.geoip2:geoip2:2.8.1')

	runtime('mysql:mysql-connector-java')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('ma.glasnost.orika:orika-core:1.4.3')
}
configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'com.google:guava:18.0',
		        'org.ow2.asm:asm:5.1',
				'org.ow2.asm:asm-tree:5.1',
				'org.ow2.asm:asm-commons:5.1',
				'com.vaadin:vaadin-spring-boot-starter:2.0.0',
				'com.vaadin:vaadin-spring-boot-starter:2.0.1',
				'org.projectlombok:lombok:1.16.10',
				'com.fasterxml.jackson.core:jackson-databind:2.8.1',
				'com.fasterxml.jackson.core:jackson-core:2.8.1',
				'com.fasterxml.jackson.core:jackson-annotations:2.8.1'
		//  *replace existing forced modules with new ones:
		forcedModules = ['com.google:guava:18.0',
						 'org.ow2.asm:asm:5.1',
						 'org.ow2.asm:asm-tree:5.1',
						 'org.ow2.asm:asm-commons:5.1',
				         'com.vaadin:vaadin-spring-boot-starter:2.0.0',
						 'com.vaadin:vaadin-spring-boot-starter:2.0.1',
						 'org.projectlombok:lombok:1.16.10',
						 'com.fasterxml.jackson.core:jackson-databind:2.8.1',
						 'com.fasterxml.jackson.core:jackson-core:2.8.1',
						 'com.fasterxml.jackson.core:jackson-annotations:2.8.1'
		]
	}
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group + ":" + details.requested.name == 'com.google:guava') {
			details.useVersion "18.0"
			details.useTarget "com.google:guava:18.0"
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:8.0.0"
	}
}
jar {
	manifest {
		attributes 'Main-Class': 'com.adonis.VehiclyManagerApplication'
	}
	zip64 = true
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

springBoot {
	mainClass = "com.adonis.VehiclyManagerApplication"
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.0.1'
}