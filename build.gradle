buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
//		maven {
//			url 'http://dl.bintray.com/steffenschaefer/maven'
//		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//		classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
//		classpath "fi.jasoft.plugin:gradle-vaadin-plugin:1.1.6"
	}
}
//apply from: 'http://plugins.jasoft.fi/vaadin.plugin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
//apply plugin: 'fi.jasoft.plugin.vaadin'

version = '1.0.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "http://maven.vaadin.com/vaadin-addons" }
	maven { url "https://mvnrepository.com/"}
	maven { url 'http://nebula.lpb.lv/nexus/content/groups/public/' }
//	maven { url "https://plugins.gradle.org/m2/"}
}
def libs = [
		login: fileTree(dir: 'lib', include: '*.jar'),
		gwt: fileTree(dir: 'lib/gwt', include: '*.jar'),
		json: fileTree(dir: 'lib/json', include: '*.jar'),
		vaadinClient: fileTree(dir: 'lib/client', include: '*.jar')
]

//def vaadinVersion = '8.0.0'

dependencies {
//	compile('org.projectlombok:lombok:1.16.10')
	compile libs.login
//	compile libs.gwt
	compile libs.json
//	compile libs.vaadinClient
	compile('ma.glasnost.orika:orika-core:1.4.3')
	compile('com.google.guava:guava:18.0')
	compile ('org.apache.commons:commons-lang3:3.5')
	compile ('javax.servlet:javax.servlet-api:3.1.0')

	compile('com.vaadin:vaadin-compatibility-server:8.0.0')
	compile ('com.vaadin:vaadin-compatibility-client-compiled:8.0.0')
	compile ('com.vaadin:vaadin-compatibility-shared:8.0.0')
	compile ('com.vaadin:vaadin-compatibility-themes:8.0.0')
	compile ('com.vaadin:vaadin-themes:8.0.0')
/*	compile ('com.vaadin:vaadin-client-compiler:8.0.0')*/

	compile group: 'com.paypal.sdk', name: 'paypal-core', version: '1.7.2'
	compile 'com.paypal.sdk:rest-api-sdk:1.13.1'

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('com.vaadin:vaadin-spring-boot-starter')

	compile('com.maxmind.geoip2:geoip2:2.8.1')

	runtime('mysql:mysql-connector-java')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('ma.glasnost.orika:orika-core:1.4.3')
}
configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'com.google:guava:18.0',
				'org.ow2.asm:asm:5.1',
				'org.ow2.asm:asm-commons:5.1',
				'org.ow2.asm:asm-tree:5.1',
				'com.fasterxml.jackson.core:jackson-databind:2.8.1',
				'com.fasterxml.jackson.core:jackson-core:2.8.1',
				'com.fasterxml.jackson.core:jackson-annotations:2.8.1'
		//  *replace existing forced modules with new ones:
		forcedModules = ['com.google:guava:18.0',
						 'org.ow2.asm:asm:5.1',
						 'org.ow2.asm:asm-commons:5.1',
						 'org.ow2.asm:asm-tree:5.1',
						 'com.fasterxml.jackson.core:jackson-databind:2.8.1',
						 'com.fasterxml.jackson.core:jackson-core:2.8.1',
						 'com.fasterxml.jackson.core:jackson-annotations:2.8.1'
		]
	}
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group + ":" + details.requested.name == 'com.google:guava') {
			details.useVersion "18.0"
			details.useTarget "com.google:guava:18.0"
		}
	}
}
dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:8.0.0"
	}
}
jar {
	manifest {
		attributes 'Main-Class': 'com.adonis.VehiclyManagerApplication'
	}
	zip64 = true
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

springBoot {
	mainClass = "com.adonis.VehiclyManagerApplication"
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.0'
}